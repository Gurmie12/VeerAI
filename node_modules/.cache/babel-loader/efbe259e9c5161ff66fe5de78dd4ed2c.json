{"ast":null,"code":"var _jsxFileName = \"/Users/gurman/Desktop/veer AI/veerai/src/components/AJAXButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/ajax.css';\nimport { render } from '@testing-library/react';\n\nfunction AJAXButton() {\n  //React Hooks that store the API data\n  const [apiData, setApiData] = useState(''); //Function that handles the click of the fetch button and retrieves API data through AJAX\n\n  const handleClick = e => {\n    e.preventDefault(); //Create the XHR object\n\n    const xhr = new XMLHttpRequest(); //Specify request and API endpoint and state synchnorosity\n\n    xhr.open('GET', 'https://api.thevirustracker.com/free-api?global=stats', true); //On the GET request proccess the data but check for the status from API\n\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        //Set the parsed JSON data to a variable\n        let data = JSON.parse(xhr.responseText).results[0]; //Set data to React Hook and render a successful alert\n\n        setApiData(data);\n        renderAlert('AJAX successfuly fetched API, Data can be seen below!', 'alert-success');\n      } else {\n        renderAlert('The Status of the AJAX Request was ' + xhr.status + '. Try again!', 'alert-danger');\n      }\n    }; //Finalize the AJAX request\n\n\n    xhr.send();\n  }; //Function that handles dispaly of alerts\n\n\n  function renderAlert(message, className) {\n    //Set Dom vairables for where the alert will be placed and create a new alert component\n    const body = document.getElementById('body');\n    const title = document.getElementById('ajax-title');\n    const alert = document.createElement('div');\n    alert.id = \"alert\";\n    alert.className = \"alert center-text \" + className;\n    alert.appendChild(document.createTextNode(message)); //Check that an alert is not already displayed\n\n    if (document.getElementById(\"alert\")) {\n      document.getElementById('alert').remove();\n      body.insertBefore(alert, title);\n      setTimeout(() => {\n        alert.remove();\n      }, 3000);\n    } else {\n      body.insertBefore(alert, title);\n      setTimeout(() => {\n        alert.remove();\n      }, 3000);\n    }\n  }\n\n  ; //Pointer function that renders the fetched data from the coronavirus API to the body\n\n  const renderAPI = () => {\n    //Create DOM object for display list\n    const dataArea = document.getElementById('data');\n\n    if (apiData === \"\") {\n      dataArea.innerHTML = \"<p className='lead'>No AJAX Fetch Has Been Made Yet!</p>\";\n    } else {\n      //Retreive all unique keys from return object of API\n      const keys = Object.keys(apiData); //Loop through each key and append the list item to the innerHTML variable\n\n      let innherHtml = \"\";\n      keys.map((key, i) => {\n        if (key !== \"source\") {\n          innherHtml += `\n                    <p className=\"lead\" key=${i}>${key}: <strong>${apiData[key]}</strong></p>\n                `;\n        }\n      }); //Append the innerHTML as a child of the list\n\n      dataArea.innerHTML = innherHtml;\n    }\n  }; //Life cycle method that calls everytime the data hook changes (every AJAX call)\n\n\n  useEffect(() => {\n    renderAPI();\n  }, [renderAPI]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ajax-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center\",\n    id: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 mt-3 mb-3\",\n    id: \"ajax-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"AJAX API Fetch (Coronavirus API)\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success mb-5\",\n    onClick: e => handleClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Fetch!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-3\",\n    id: \"data-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Here is the Retrieved Data!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center\",\n    id: \"data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default AJAXButton;","map":{"version":3,"sources":["/Users/gurman/Desktop/veer AI/veerai/src/components/AJAXButton.js"],"names":["React","useState","useEffect","render","AJAXButton","apiData","setApiData","handleClick","e","preventDefault","xhr","XMLHttpRequest","open","onload","status","data","JSON","parse","responseText","results","renderAlert","send","message","className","body","document","getElementById","title","alert","createElement","id","appendChild","createTextNode","remove","insertBefore","setTimeout","renderAPI","dataArea","innerHTML","keys","Object","innherHtml","map","key","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/ajax.css';\nimport { render } from '@testing-library/react';\n\nfunction AJAXButton(){\n    //React Hooks that store the API data\n    const [apiData, setApiData] = useState('');\n\n\n    //Function that handles the click of the fetch button and retrieves API data through AJAX\n    const handleClick = (e) =>{\n        e.preventDefault();\n\n        //Create the XHR object\n        const xhr = new XMLHttpRequest();\n\n        //Specify request and API endpoint and state synchnorosity\n        xhr.open('GET', 'https://api.thevirustracker.com/free-api?global=stats', true);\n\n        //On the GET request proccess the data but check for the status from API\n        xhr.onload = () =>{\n            if(xhr.status === 200){\n                \n                //Set the parsed JSON data to a variable\n                let data = (JSON.parse(xhr.responseText).results)[0];\n                \n                //Set data to React Hook and render a successful alert\n                setApiData(data);\n                renderAlert('AJAX successfuly fetched API, Data can be seen below!', 'alert-success');\n            }else{\n                renderAlert('The Status of the AJAX Request was ' + xhr.status + '. Try again!', 'alert-danger');\n            }   \n        }\n\n        //Finalize the AJAX request\n        xhr.send();\n    };\n\n    //Function that handles dispaly of alerts\n    function renderAlert(message, className){\n\n        //Set Dom vairables for where the alert will be placed and create a new alert component\n        const body = document.getElementById('body');\n        const title = document.getElementById('ajax-title');\n        const alert = document.createElement('div');\n        alert.id = \"alert\";\n        alert.className = \"alert center-text \" + className;\n        alert.appendChild(document.createTextNode(message));\n\n        //Check that an alert is not already displayed\n        if(document.getElementById(\"alert\")){\n            document.getElementById('alert').remove();\n            body.insertBefore(alert, title);\n            setTimeout(() =>{\n            alert.remove();\n            }, 3000);\n        }else{\n            body.insertBefore(alert, title);\n            setTimeout(() =>{\n            alert.remove();\n            }, 3000);\n        }\n    };\n\n\n    //Pointer function that renders the fetched data from the coronavirus API to the body\n    const renderAPI = () =>{\n\n        //Create DOM object for display list\n        const dataArea = document.getElementById('data');\n\n        if(apiData === \"\"){\n            dataArea.innerHTML = \"<p className='lead'>No AJAX Fetch Has Been Made Yet!</p>\";\n        }else{\n              //Retreive all unique keys from return object of API\n            const keys = Object.keys(apiData);\n\n            //Loop through each key and append the list item to the innerHTML variable\n            let innherHtml = \"\";\n            keys.map((key,i) =>{\n                if(key !== \"source\"){\n                    innherHtml+= `\n                    <p className=\"lead\" key=${i}>${key}: <strong>${apiData[key]}</strong></p>\n                `\n                }\n            })\n\n            //Append the innerHTML as a child of the list\n            dataArea.innerHTML = innherHtml;\n        }\n    };\n\n    //Life cycle method that calls everytime the data hook changes (every AJAX call)\n    useEffect(() =>{\n        renderAPI();\n    }, [renderAPI]);\n\n\n    return(\n        <div className=\"ajax-body\">\n            <div className=\"container text-center\" id=\"body\">\n                <h1 className=\"display-4 mt-3 mb-3\" id=\"ajax-title\">AJAX API Fetch (Coronavirus API)</h1>\n                <br/>\n                <br/>\n\n                <button className=\"btn btn-success mb-5\" onClick={e => handleClick(e)}>Fetch!</button>\n\n                <h3 className=\"mb-3\" id=\"data-title\">Here is the Retrieved Data!</h3>\n                <div className=\"container text-center\" id=\"data\">\n \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AJAXButton;"]},"metadata":{},"sourceType":"module"}